@use "@/assets/styles/vars.scss" as vars;

// 组件样式变量定义
$container-clr--bg: map-get(vars.$colors,neutral-1);
$title-clr--text: map-get(vars.$colors,neutral-2);

.login-container{
  position: absolute;
  top: 0;
  left: 0;
  width: 100%;
  height: 100%;
  display: flex;
  z-index: 9999;
  justify-content: center;
  align-items: center;
  background-color: rgba($container-clr--bg, 0.5);
  backdrop-filter: blur(5px);
}

@mixin base-content{
  background-color: map-get(vars.$colors,_white);
  display: flex;
  flex-direction: column;
  justify-content: start;
  align-items: center;
  padding: 1rem;
  gap: 0.5rem;
  border-radius: 0.5rem;
  box-shadow: 0 10px 10px rgba(map-get(vars.$colors,neutral-5),0.5);
  transition: 0.3s ease-in-out;
}

.login-content{
  width: 20%;
  height: 50%;
  min-width: 16rem;
  min-height: 32rem;
  @include base-content;

  .login-section{
    height: 100%;
    width: 100%;
    display: flex;
    flex-direction: column;
    justify-content: start;
    align-items: center;
  }
  .register-section{
    height: 100%;
    width: 100%;
    display: flex;
    flex-direction: column;
    justify-content: start;
    align-items: center;
  }
}

.login-content__logo{
  position: relative;
  width: 50%;
  height: 20%;
  display: flex;
  align-items: end;
  justify-content: center;

  .logo{
    position: absolute;
    height: 50%;
    object-fit: contain;
  }
}

.login-content__title{
  color: map-get(vars.$colors,neutral-2);
  width: 100%;
  height: 10%;
  color: $title-clr--text;
  font-weight: bold;
  font-size: map-get(vars.$font-size, xl);
}

.login-content__form{
  width: 100%;
  height: auto;
  display: flex;
  flex-direction: column;
  justify-content: start;
  align-items: center;
  .el-form{
    width: 80%;
    height: auto;

    :deep{
      .el-form-item{
        margin-top: 1rem;
        &.password-opt .el-form-item__content{
          display: flex;
          justify-content: space-between;
          align-items: center;
        }
      }
      .el-input{
        width: 100%;
        height: clamp(1.5rem, 2.5rem, 3rem);
        .el-input__wrapper{
          border-radius: 0.5rem;
          &.is-focus{
            box-shadow:  0 0 0 1px map-get(vars.$colors,primary) inset;
          }
          &.is-hover{
            box-shadow:  0 0 0 1px map-get(vars.$colors,neutral-7) inset;
          }
        }
        .el-icon{
          font-size: 1rem;
          svg path{
            fill: map-get(vars.$colors,neutral-5);
          }
        }
      }
      .el-button{
        width: 100%;
        height: clamp(1.5rem, 2.5rem, 3rem);
        border-radius: 0.3rem;
        background-color: map-get(vars.$colors,primary);
        &:hover{
          background-color: map-get(vars.$colors,primary-dark-1);
        }
      }

      .el-checkbox{
        &.is-checked {
          .el-checkbox__inner{
            background-color: map-get(vars.$colors,primary);
            border-color: map-get(vars.$colors,primary);
          }
          .el-checkbox__label{
            color: map-get(vars.$colors,primary);
          }
        }
      }

      .el-link{
        color: map-get(vars.$colors,primary);
        &:after{
          border: 0;
        }
        .el-link__inner{
          $underline-color: map-get(vars.$colors,primary-dark-1);
          background: linear-gradient(to right, $underline-color, $underline-color) no-repeat right bottom;
          background-size: 0 2px ;
          transition-duration: 0.3s;
          transition-property: background-size,color;
          transition-timing-function: ease-in-out;
          cursor: pointer;
          &:hover{
            color: $underline-color;
            background: linear-gradient(to right, $underline-color, $underline-color) no-repeat left bottom;
            background-size: 100% 2px;
          }
        }
      }
    }
  }
}

.login-content__register{
  margin-top: -1rem;
  width: 100%;
  flex-grow: 1;
  a{
    font-size: map-get(vars.$font-size,s);
    color: map-get(vars.$colors,neutral-5);
    underline: none;
  }
}

.register-content{
  width: 40%;
  height: 60%;
  min-width: 24rem;
  min-height: 40rem;
  @include base-content;
  gap: 0;
}

.register-content__title{
  width: 100%;
  height: 10%;
  color: $title-clr--text;
  font-weight: bold;
  font-size: map-get(vars.$font-size, xl);
  display: flex;
  align-items: center;
  justify-content: center;
  margin-bottom: 8px;
}
.register-content__text{
  width: 100%;
  height: 5%;
  color: $title-clr--text;
  font-weight: normal;
  font-size: map-get(vars.$font-size, s);
  display: flex;
  align-items: center;
  justify-content: center;
  transform: translateY(-80%);
}

.register-content__form{
  :deep{
    .el-form-item{
      .el-form-item__label{
        width: 100%;
        margin-bottom: 0;
      }
      .el-radio{
        &.is-checked{
          .el-radio__input .el-radio__inner{
            background-color: map-get(vars.$colors,primary);
            border-color: map-get(vars.$colors,primary);
          }
         .el-radio__label{
           color: map-get(vars.$colors,primary);
         }
        }
      }
      .el-input{
        width: 100%;
        height: clamp(1.5rem, 2.5rem, 3rem);
        .el-input__wrapper{
          border-radius: 0.5rem;
          &.is-focus{
            box-shadow:  0 0 0 1px map-get(vars.$colors,primary) inset;
          }
          &.is-hover{
            box-shadow:  0 0 0 1px map-get(vars.$colors,neutral-7) inset;
          }
        }
      }
      .el-button{
        width: 100%;
        height: clamp(1.5rem, 2.5rem, 3rem);
        border-radius: 0.3rem;
        background-color: map-get(vars.$colors,primary);
        &:hover{
          background-color: map-get(vars.$colors,primary-dark-1);
        }
      }
    }
  }
}

.register-content--login{
  a{
    font-size: map-get(vars.$font-size,s);
    color: $title-clr--text;
    underline: none;

    span{
      color: map-get(vars.$colors,primary);
    }
  }
}

.fade-enter-active,
.fade-leave-active {
  transition: all 0.25s ease-in-out;
}
.fade-enter-active{
  transition-delay: 0.25s;
}
.fade-enter-from{
  opacity: 0;
  transform: translateY(100%);
}
.fade-leave-to {
  opacity: 0;
  transform: translateY(-100%);
}

